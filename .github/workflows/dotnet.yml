# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
    push:
        branches: ["lab3"]
    pull_request:
        branches: ["lab3"]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x

            - name: Restore dependencies
              run: dotnet restore ./lab1/DatesAndStuff/src/DatesAndStuff/DatesAndStuff.csproj

            - name: Build
              run: dotnet build ./lab1/DatesAndStuff/src/DatesAndStuff/DatesAndStuff.csproj --no-restore

            - name: Restore dependencies
              run: dotnet restore ./lab1/DatesAndStuff/test/DatesAndStuff.Tests/DatesAndStuff.Tests.csproj

            - name: Build
              run: dotnet build ./lab1/DatesAndStuff/test/DatesAndStuff.Tests/DatesAndStuff.Tests.csproj --no-restore

            - name: Run tests with coverage
              run: |
                  dotnet test --no-build --verbosity normal --logger trx --collect:"XPlat Code Coverage;Format=opencover" --results-directory ./lab1/TestResults

            - name: Install ReportGenerator
              run: dotnet tool install -g dotnet-reportgenerator-globaltool

            - name: Generate coverage report
              run: |
                  export PATH="$PATH:/root/.dotnet/tools"
                  reportgenerator \
                    -reports:./lab1/TestResults/**/coverage.opencover.xml \
                    -targetdir:./lab1/TestResults/CoverageReport \
                    -reporttypes:Html

            - name: Upload coverage report
              uses: actions/upload-artifact@v4
              with:
                  name: CoverageReport
                  path: ./lab1/TestResults/CoverageReport
                  retention-days: 7
